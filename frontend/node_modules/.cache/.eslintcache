[{"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\Header.js":"5","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\products.js":"7","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\Product.js":"8","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\Rating.js":"9","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\ProductScreen.js":"10","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\store.js":"11","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\reducers\\productReducers.js":"12","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\constants\\productConstants.js":"13","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\actions\\productActions.js":"14","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\Loader.js":"15","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\Message.js":"16","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\CartScreen.js":"17","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\reducers\\cartReducers.js":"18","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\constants\\cartConstant.js":"19","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\actions\\cartactions.js":"20","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\actions\\cartActions.js":"21","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\reducers\\userReducers.js":"22","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\constants\\userConstants.js":"23","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\LoginScreen.js":"24","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\actions\\userActions.js":"25","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\FormContainer.js":"26","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\RegisterScreen.js":"27","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\ProfileScreen.js":"28","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\ShippingScreen.js":"29","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\CheckoutSteps.js":"30","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\PaymentScreen.js":"31","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\PlaceOrderScreen.js":"32","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\actions\\orderActions.js":"33","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\constants\\orderConstants.js":"34","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\reducers\\orderReducer.js":"35","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\OrderScreen.js":"36","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\UserListScreen.js":"37","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\UserEditScreen.js":"38","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\ProductListScreen.js":"39","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\ProductEditScreen.js":"40","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\OrderListScreen.js":"41","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\SearchBox.js":"42","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\index.js":"43","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\App.js":"44","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\store.js":"45","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\reportWebVitals.js":"46","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\HomeScreen.js":"47","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\Header.js":"48","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\ProductScreen.js":"49","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\CartScreen.js":"50","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\LoginScreen.js":"51","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\RegisterScreen.js":"52","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\Footer.js":"53","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\ProfileScreen.js":"54","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\PaymentScreen.js":"55","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js":"56","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\UserListScreen.js":"57","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\UserEditScreen.js":"58","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\ShippingScreen.js":"59","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\ProductEditScreen.js":"60","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\OrderScreen.js":"61","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\ProductListScreen.js":"62","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\OrderListScreen.js":"63","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\reducers\\productReducers.js":"64","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\reducers\\userReducers.js":"65","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\reducers\\orderReducer.js":"66","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\reducers\\cartReducers.js":"67","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\Product.js":"68","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\FormContainer.js":"69","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\Loader.js":"70","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\Message.js":"71","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\Rating.js":"72","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\SearchBox.js":"73","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\actions\\orderActions.js":"74","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\actions\\cartActions.js":"75","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\actions\\productActions.js":"76","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\constants\\productConstants.js":"77","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\constants\\orderConstants.js":"78","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\actions\\userActions.js":"79","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\CheckoutSteps.js":"80","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\constants\\userConstants.js":"81","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\constants\\cartConstant.js":"82"},{"size":597,"mtime":1648827313511,"results":"83","hashOfConfig":"84"},{"size":2604,"mtime":1650141799695,"results":"85","hashOfConfig":"84"},{"size":362,"mtime":1648534206955,"results":"86","hashOfConfig":"84"},{"size":353,"mtime":1650137439997,"results":"87","hashOfConfig":"84"},{"size":2570,"mtime":1650186211993,"results":"88","hashOfConfig":"84"},{"size":1065,"mtime":1648886379069,"results":"89","hashOfConfig":"84"},{"size":2690,"mtime":1648583054150,"results":"90","hashOfConfig":"84"},{"size":979,"mtime":1650017130376,"results":"91","hashOfConfig":"84"},{"size":1602,"mtime":1648561552139,"results":"92","hashOfConfig":"84"},{"size":8070,"mtime":1650180277464,"results":"93","hashOfConfig":"84"},{"size":2409,"mtime":1650138603555,"results":"94","hashOfConfig":"84"},{"size":4037,"mtime":1650138103883,"results":"95","hashOfConfig":"84"},{"size":1536,"mtime":1650137894195,"results":"96","hashOfConfig":"84"},{"size":6191,"mtime":1650137917406,"results":"97","hashOfConfig":"84"},{"size":353,"mtime":1648883469284,"results":"98","hashOfConfig":"84"},{"size":220,"mtime":1648886234539,"results":"99","hashOfConfig":"84"},{"size":4674,"mtime":1650016918816,"results":"100","hashOfConfig":"84"},{"size":1196,"mtime":1650037788587,"results":"101","hashOfConfig":"84"},{"size":294,"mtime":1650038835374,"results":"102","hashOfConfig":"84"},{"size":527,"mtime":1648979545889,"results":"103","hashOfConfig":"84"},{"size":1280,"mtime":1650037662055,"results":"104","hashOfConfig":"84"},{"size":3884,"mtime":1650127158387,"results":"105","hashOfConfig":"84"},{"size":1512,"mtime":1650101040466,"results":"106","hashOfConfig":"84"},{"size":2477,"mtime":1649862823200,"results":"107","hashOfConfig":"84"},{"size":7699,"mtime":1650127730044,"results":"108","hashOfConfig":"84"},{"size":392,"mtime":1649833908963,"results":"109","hashOfConfig":"84"},{"size":4104,"mtime":1649868487639,"results":"110","hashOfConfig":"84"},{"size":6923,"mtime":1650093497678,"results":"111","hashOfConfig":"84"},{"size":3340,"mtime":1650034991454,"results":"112","hashOfConfig":"84"},{"size":1643,"mtime":1650034732982,"results":"113","hashOfConfig":"84"},{"size":1626,"mtime":1650050443965,"results":"114","hashOfConfig":"84"},{"size":6756,"mtime":1650047738913,"results":"115","hashOfConfig":"84"},{"size":6284,"mtime":1650038804270,"results":"116","hashOfConfig":"84"},{"size":1268,"mtime":1650038764108,"results":"117","hashOfConfig":"84"},{"size":4276,"mtime":1650044517655,"results":"118","hashOfConfig":"84"},{"size":7660,"mtime":1650094590538,"results":"119","hashOfConfig":"84"},{"size":3681,"mtime":1650128191373,"results":"120","hashOfConfig":"84"},{"size":4121,"mtime":1650136605637,"results":"121","hashOfConfig":"84"},{"size":4202,"mtime":1650138801211,"results":"122","hashOfConfig":"84"},{"size":6191,"mtime":1650185225616,"results":"123","hashOfConfig":"84"},{"size":3723,"mtime":1650141814725,"results":"124","hashOfConfig":"84"},{"size":890,"mtime":1650185910409,"results":"125","hashOfConfig":"84"},{"size":597,"mtime":1648827313511,"results":"126","hashOfConfig":"127"},{"size":2601,"mtime":1650212374196,"results":"128","hashOfConfig":"127"},{"size":2409,"mtime":1650138603555,"results":"129","hashOfConfig":"127"},{"size":362,"mtime":1648534206955,"results":"130","hashOfConfig":"127"},{"size":1065,"mtime":1648886379069,"results":"131","hashOfConfig":"127"},{"size":2707,"mtime":1650209459619,"results":"132","hashOfConfig":"127"},{"size":8070,"mtime":1650180277464,"results":"133","hashOfConfig":"127"},{"size":4674,"mtime":1650016918816,"results":"134","hashOfConfig":"127"},{"size":2477,"mtime":1649862823200,"results":"135","hashOfConfig":"127"},{"size":4104,"mtime":1649868487639,"results":"136","hashOfConfig":"127"},{"size":353,"mtime":1650137439997,"results":"137","hashOfConfig":"127"},{"size":6923,"mtime":1650093497678,"results":"138","hashOfConfig":"127"},{"size":1626,"mtime":1650050443965,"results":"139","hashOfConfig":"127"},{"size":6756,"mtime":1650047738913,"results":"140","hashOfConfig":"127"},{"size":3681,"mtime":1650128191373,"results":"141","hashOfConfig":"127"},{"size":4121,"mtime":1650136605637,"results":"142","hashOfConfig":"127"},{"size":3340,"mtime":1650034991454,"results":"143","hashOfConfig":"127"},{"size":6191,"mtime":1650185225616,"results":"144","hashOfConfig":"127"},{"size":7660,"mtime":1650094590538,"results":"145","hashOfConfig":"127"},{"size":4202,"mtime":1650138801211,"results":"146","hashOfConfig":"127"},{"size":3723,"mtime":1650141814725,"results":"147","hashOfConfig":"127"},{"size":4037,"mtime":1650138103883,"results":"148","hashOfConfig":"127"},{"size":3884,"mtime":1650127158387,"results":"149","hashOfConfig":"127"},{"size":4276,"mtime":1650044517655,"results":"150","hashOfConfig":"127"},{"size":1196,"mtime":1650037788587,"results":"151","hashOfConfig":"127"},{"size":1094,"mtime":1650265481189,"results":"152","hashOfConfig":"127"},{"size":392,"mtime":1649833908963,"results":"153","hashOfConfig":"127"},{"size":353,"mtime":1648883469284,"results":"154","hashOfConfig":"127"},{"size":220,"mtime":1648886234539,"results":"155","hashOfConfig":"127"},{"size":1602,"mtime":1648561552139,"results":"156","hashOfConfig":"127"},{"size":890,"mtime":1650185910409,"results":"157","hashOfConfig":"127"},{"size":6284,"mtime":1650038804270,"results":"158","hashOfConfig":"127"},{"size":1280,"mtime":1650037662055,"results":"159","hashOfConfig":"127"},{"size":6191,"mtime":1650137917406,"results":"160","hashOfConfig":"127"},{"size":1536,"mtime":1650137894195,"results":"161","hashOfConfig":"127"},{"size":1268,"mtime":1650038764108,"results":"162","hashOfConfig":"127"},{"size":7699,"mtime":1650127730044,"results":"163","hashOfConfig":"127"},{"size":1643,"mtime":1650034732982,"results":"164","hashOfConfig":"127"},{"size":1512,"mtime":1650101040466,"results":"165","hashOfConfig":"127"},{"size":294,"mtime":1650038835374,"results":"166","hashOfConfig":"127"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"1sc57mn",{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"170"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"170"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"170"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"170"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"170"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"170"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"170"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"170"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},"7630ob",{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"306"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"306"},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"306"},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"306"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"306"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"306"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"306"},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"306"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"306"},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"306"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"306"},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"306"},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"306"},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"306"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"306"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"306"},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"306"},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"306"},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"306"},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"306"},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"426","messages":"427","suppressedMessages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"306"},{"filePath":"430","messages":"431","suppressedMessages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"433","messages":"434","suppressedMessages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"436","messages":"437","suppressedMessages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\index.js",[],[],["439","440"],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\App.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\Header.js",["441"],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\HomeScreen.js",["442"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nfunction HomeScreen() {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { error, loading, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Latest product</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\products.js",[],[],["443","444"],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\Product.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\Rating.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\ProductScreen.js",["445","446","447"],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\store.js",["448"],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\reducers\\productReducers.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\constants\\productConstants.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\actions\\productActions.js",["449"],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\Loader.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\Message.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\CartScreen.js",["450","451"],[],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Link,\r\n  useSearchParams,\r\n  useLocation,\r\n  useParams,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart ,removeFromCart} from \"../actions/cartActions\";\r\n\r\nfunction CartScreen({ }) {\r\n  const match = useParams();\r\n  const location = useLocation();\r\n  const productId = match.id;\r\n  const history = useNavigate()\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler=(id)=>{\r\n\r\ndispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler=()=>{\r\n       \r\n    history('/login?redirect=/shipping')\r\n \r\n  }\r\n\r\n  return (\r\n    <Row>\r\n        <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            {cartItems.length === 0 ? (\r\n                <Message variant='info'>\r\n                    Your cart is empty <Link to='/'>Go Back</Link>\r\n                </Message>\r\n            ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {\r\n\r\n                                                [...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                        ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n                <ListGroup.Item>\r\n                    <Button\r\n                        type='button'\r\n                        className='btn-block'\r\n                        disabled={cartItems.length === 0}\r\n                        onClick={checkoutHandler}\r\n                    >\r\n                        Proceed To Checkout\r\n                    </Button>\r\n                </ListGroup.Item>\r\n\r\n\r\n            </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\reducers\\cartReducers.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\constants\\cartConstant.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\actions\\cartactions.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\actions\\cartActions.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\reducers\\userReducers.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\constants\\userConstants.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\LoginScreen.js",["452"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login } from \"../actions/userActions\";\r\nfunction LoginScreen() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch=useDispatch()\r\n  const location = useLocation();\r\n  const history = useNavigate();\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n  \r\n\r\n  const userLogin =useSelector(state=>state.userLogin)\r\n  const { error,loading,userInfo} =userLogin\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n   if(userInfo){\r\n\r\n    history(redirect)\r\n   }\r\n\r\n\r\n  },[userInfo,redirect])\r\n\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email,password))\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n\r\n        <Row className=\"py-3\">\r\n          <Col style={{textAlign:'center'}}>\r\n        <Button type=\"submit\" variant=\"dark\"   style={{ color: \"black\", fontWeight: \"bold\" }} >\r\n          Sign In\r\n        </Button>\r\n        </Col>\r\n\r\n        </Row>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col style={{textAlign:'center'}}>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\actions\\userActions.js",["453"],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\FormContainer.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\RegisterScreen.js",["454","455","456"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Link ,useLocation,useNavigate} from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n    const history =  useNavigate();\r\n\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history(redirect)\r\n        }\r\n    }, [ userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\ProfileScreen.js",["457","458","459","460","461"],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\ShippingScreen.js",["462","463","464","465"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\n\r\nfunction ShippingScreen({}) {\r\n\r\n\r\n  const cart =useSelector(state=>state.cart)\r\n  const {shippingAddress } = cart\r\n  \r\n  \r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useNavigate();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history('/payment')\r\n}\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n         <CheckoutSteps step1 step2 />\r\n     <h1>Shipping</h1>\r\n     <Form onSubmit={submitHandler}>\r\n     <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n     </Form>\r\n\r\n      \r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\CheckoutSteps.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\PaymentScreen.js",["466","467","468","469"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\nfunction PaymentScreen({}) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useNavigate();\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  if (!shippingAddress.address) {\r\n    history(\"/shipping\");\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default PaymentScreen;\r\n","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\PlaceOrderScreen.js",["470","471","472"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link,useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({}) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useNavigate()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={2}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\actions\\orderActions.js",["473","474","475"],[],"import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstant'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\constants\\orderConstants.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\reducers\\orderReducer.js",[],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\OrderScreen.js",["476","477","478","479"],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\UserListScreen.js",["480","481","482","483","484"],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\UserEditScreen.js",["485","486","487","488"],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\ProductListScreen.js",["489","490","491","492","493","494"],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\ProductEditScreen.js",["495","496","497","498"],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\screens\\OrderListScreen.js",["499","500","501","502","503","504"],[],"C:\\Users\\hp\\Desktop\\Ecommerce\\frontend\\src\\components\\SearchBox.js",["505","506","507"],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\index.js",[],[],["508","509"],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\App.js",[],[],["510","511"],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\store.js",["512"],[],"import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from \"./reducers/productReducers\";\r\n\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/orderReducer\";\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userDetailsReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate:userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\HomeScreen.js",["513"],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\Header.js",["514","515"],[],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from \"../actions/userActions\";\r\nimport '../index.css';\r\n\r\nfunction Header() {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>AlphaMart</Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            {/* <SearchBox/> */}\r\n            <Nav className=\"ms-auto my-2 my-lg-1\" style={{ maxHeight: \"100px\" }} navbarScroll>\r\n              \r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i>Login\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenue\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n\r\n             \r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"  ></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n             \r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\ProductScreen.js",["516","517","518"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Card,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductScreen({}) {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const match = useParams();\r\n  const id = useParams();\r\n  const history = useNavigate();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { product, error, loading } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n    success: successProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment(\"\");\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(listProductDetails(match.id));\r\n  }, [dispatch, id]);\r\n\r\n  const addToCartHandler = () => {\r\n    history(`/cart/${match.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(match.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                    color={\"#f8e825\"}\r\n                  />\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col xs=\"auto\" className=\"my-1\">\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      disabled={product.countInStock == 0}\r\n                      type=\"button\"\r\n                    >\r\n                      Add to Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <h4>Reviews</h4>\r\n              {product.reviews.length === 0 && (\r\n                <Message variant=\"info\">No Reviews</Message>\r\n              )}\r\n\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} color=\"#f8e825\" />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n\r\n                <ListGroup.Item>\r\n                  <h4>Write a review</h4>\r\n\r\n                  {loadingProductReview && <Loader />}\r\n                  {successProductReview && (\r\n                    <Message variant=\"success\">Review Submitted</Message>\r\n                  )}\r\n                  {errorProductReview && (\r\n                    <Message variant=\"danger\">{errorProductReview}</Message>\r\n                  )}\r\n\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Review</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"5\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message variant=\"info\">\r\n                      Please <Link to=\"/login\">login</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\CartScreen.js",["519","520"],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\LoginScreen.js",["521"],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\RegisterScreen.js",["522","523","524"],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\ProfileScreen.js",["525","526","527","528","529"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Link ,useLocation,useNavigate} from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails,updateUserProfile } from '../actions/userActions' \r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nimport { listMyOrders }  from '../actions/orderActions'\r\n\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n    const history =  useNavigate();\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user} = userDetails\r\n\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success} = userUpdateProfile\r\n\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders,error:errorOrders,orders} = orderListMy\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history('/login')\r\n        } else {\r\n            if (!user || !user.name || success ) {\r\n                dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n               \r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n                \r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n\r\n\r\n    }, [ userInfo,dispatch,user,success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            \r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n  return (\r\n    <Row>\r\n\r\n    <Col md={3}>\r\n    \r\n    <h2>User Profile</h2>\r\n    {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                       \r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        \r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n\r\n            </Form>\r\n    \r\n    </Col>\r\n\r\n\r\n\r\n    \r\n\r\n    <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\PaymentScreen.js",["530","531","532","533"],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js",["534","535","536"],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\UserListScreen.js",["537","538","539","540","541"],[],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useNavigate();\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history('/login')\r\n        }\r\n\r\n    }, [dispatch,successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\UserEditScreen.js",["542","543","544","545"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useLocation, useNavigate,useParams } from \"react-router-dom\";\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ }) {\r\n    \r\n    const match = useParams();\r\n    const id= useParams();\r\n    const userId = match.id\r\n    const history = useNavigate();\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\ShippingScreen.js",["546","547","548","549"],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\ProductEditScreen.js",["550","551","552","553"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductEditScreen({}) {\r\n  const match = useParams();\r\n  const id = useParams();\r\n  const productId = match.id;\r\n  const history = useNavigate();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { error, loading, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history(\"/admin/productlist\");\r\n    } else {\r\n      if (!product.name || product._id !== Number(productId)) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [product, productId, dispatch, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n\r\n    formData.append('image', file)\r\n    formData.append('product_id', productId)\r\n\r\n    setUploading(true)\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n        setImage(data)\r\n        setUploading(false)\r\n\r\n    } catch (error) {\r\n        setUploading(false)\r\n    }\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/productlist\">Go Back</Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n\r\n          \r\n           <Form.Control type=\"file\" custom=\"true\" onChange={uploadFileHandler} />\r\n\r\n            {uploading && <Loader />}\r\n\r\n\r\n\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"countinstock\">\r\n              <Form.Label>Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter stock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\OrderScreen.js",["554","555","556","557"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link, useLocation, useNavigate,useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nfunction OrderScreen({  }) {\r\n  \r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useNavigate();\r\n  const match= useParams();\r\n  const id= useParams();\r\n\r\n  const orderId = match.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);    //Paypal\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, error, loading } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading && !error) {\r\n    order.itemsPrice = order.orderItems\r\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n      .toFixed(2);\r\n  }\r\n\r\n  const addPayPalScript = () => {\r\n    const script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.src =\r\n      \"https://www.paypal.com/sdk/js?client-id=Af1HfxaeVJ8spQ9AE1Gf1I8oVS1fJzWU7la959VPtdj7uP9-hvlGOhurHnWJY1jU5Dt_4mJwPhU3Unuu\";\r\n    script.async = true;\r\n    script.onload = () => {\r\n      setSdkReady(true);\r\n    };\r\n    document.body.appendChild(script);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history(\"/login\");\r\n    }\r\n\r\n    if (\r\n      !order ||\r\n      successPay ||\r\n      order._id !== Number(orderId) ||\r\n      successDeliver\r\n    ) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay, successDeliver]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <div>\r\n      <h1>Order: {order.Id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                {\"  \"}\r\n                {order.shippingAddress.postalCode},{\"  \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"warning\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"warning\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message variant=\"info\">Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n            {loadingDeliver && <Loader />}\r\n            {userInfo &&\r\n              userInfo.isAdmin &&\r\n              order.isPaid &&\r\n              !order.isDelivered && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    className=\"btn btn-block\"\r\n                    onClick={deliverHandler}\r\n                  >\r\n                    Mark As Delivered\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\ProductListScreen.js",["558","559","560","561","562","563"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductListScreen({  }) {\r\n  const dispatch = useDispatch();\r\n  const history = useNavigate();\r\n  const location = useLocation();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  let keyword = location.search;\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      history(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(keyword));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    keyword,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this product?\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductListScreen;\r\n","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\screens\\OrderListScreen.js",["564","565","566","567","568","569"],[],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link, useLocation, useNavigate,useParams } from \"react-router-dom\";\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useNavigate();\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history('/login')\r\n        }\r\n\r\n    }, [dispatch,userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\reducers\\productReducers.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\reducers\\userReducers.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\reducers\\orderReducer.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\reducers\\cartReducers.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\Product.js",["570"],[],"import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Product({ product }) {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <Link to={`/product/${product._id}`}>\r\n        {/* <Card.Img src={product.image} /> */}\r\n        <img src={product.image} height={300} width={278} />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`} style={{ textDecoration: \"none\" }}>\r\n          <Card.Title as=\"div\">\r\n            <strong> {product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          <div className=\"my-3\">\r\n            <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} reviews`}\r\n              color={\"#e0d870\"}\r\n            />\r\n          </div>\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h3\" style={{ color: \"#696969\", fontWeight: \"bold\" }}>\r\n          ${product.price}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\FormContainer.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\Loader.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\Message.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\Rating.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\SearchBox.js",["571","572","573"],[],"import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory,useNavigate ,useLocation} from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useNavigate()\r\n    const location = useLocation();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history(history(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className=' ml-sm-5'\r\n            >\r\n\r\n\r\n            </Form.Control>\r\n\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\actions\\orderActions.js",["574","575","576"],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\actions\\cartActions.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\actions\\productActions.js",["577"],[],"import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\constants\\productConstants.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\constants\\orderConstants.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\actions\\userActions.js",["578"],[],"import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\components\\CheckoutSteps.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\constants\\userConstants.js",[],[],"C:\\Users\\hp\\Desktop\\Git DR\\Ecommerce\\Ecommerce-Django-React-\\backend\\frontend\\src\\constants\\cartConstant.js",[],[],{"ruleId":"579","replacedBy":"580"},{"ruleId":"581","replacedBy":"582"},{"ruleId":"583","severity":1,"message":"584","line":3,"column":34,"nodeType":"585","messageId":"586","endLine":3,"endColumn":37},{"ruleId":"583","severity":1,"message":"587","line":1,"column":17,"nodeType":"585","messageId":"586","endLine":1,"endColumn":25},{"ruleId":"579","replacedBy":"588"},{"ruleId":"581","replacedBy":"589"},{"ruleId":"590","severity":1,"message":"591","line":24,"column":24,"nodeType":"592","messageId":"593","endLine":24,"endColumn":26},{"ruleId":"594","severity":1,"message":"595","line":54,"column":6,"nodeType":"596","endLine":54,"endColumn":20,"suggestions":"597"},{"ruleId":"598","severity":1,"message":"599","line":154,"column":54,"nodeType":"600","messageId":"593","endLine":154,"endColumn":56},{"ruleId":"583","severity":1,"message":"601","line":19,"column":3,"nodeType":"585","messageId":"586","endLine":19,"endColumn":27},{"ruleId":"583","severity":1,"message":"602","line":117,"column":17,"nodeType":"585","messageId":"586","endLine":117,"endColumn":21},{"ruleId":"583","severity":1,"message":"603","line":4,"column":3,"nodeType":"585","messageId":"586","endLine":4,"endColumn":18},{"ruleId":"590","severity":1,"message":"591","line":22,"column":21,"nodeType":"592","messageId":"593","endLine":22,"endColumn":24},{"ruleId":"594","severity":1,"message":"604","line":32,"column":5,"nodeType":"596","endLine":32,"endColumn":24,"suggestions":"605"},{"ruleId":"583","severity":1,"message":"606","line":21,"column":5,"nodeType":"585","messageId":"586","endLine":21,"endColumn":30},{"ruleId":"590","severity":1,"message":"591","line":10,"column":25,"nodeType":"592","messageId":"593","endLine":10,"endColumn":27},{"ruleId":"594","severity":1,"message":"604","line":32,"column":8,"nodeType":"596","endLine":32,"endColumn":29,"suggestions":"607"},{"ruleId":"598","severity":1,"message":"608","line":37,"column":22,"nodeType":"600","messageId":"593","endLine":37,"endColumn":24},{"ruleId":"583","severity":1,"message":"609","line":2,"column":10,"nodeType":"585","messageId":"586","endLine":2,"endColumn":14},{"ruleId":"583","severity":1,"message":"610","line":8,"column":8,"nodeType":"585","messageId":"586","endLine":8,"endColumn":21},{"ruleId":"583","severity":1,"message":"611","line":24,"column":11,"nodeType":"585","messageId":"586","endLine":24,"endColumn":19},{"ruleId":"594","severity":1,"message":"604","line":61,"column":8,"nodeType":"596","endLine":61,"endColumn":41,"suggestions":"612"},{"ruleId":"598","severity":1,"message":"608","line":66,"column":22,"nodeType":"600","messageId":"593","endLine":66,"endColumn":24},{"ruleId":"583","severity":1,"message":"613","line":1,"column":27,"nodeType":"585","messageId":"586","endLine":1,"endColumn":36},{"ruleId":"583","severity":1,"message":"609","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":14},{"ruleId":"590","severity":1,"message":"591","line":11,"column":25,"nodeType":"592","messageId":"593","endLine":11,"endColumn":27},{"ruleId":"583","severity":1,"message":"611","line":23,"column":9,"nodeType":"585","messageId":"586","endLine":23,"endColumn":17},{"ruleId":"583","severity":1,"message":"613","line":1,"column":27,"nodeType":"585","messageId":"586","endLine":1,"endColumn":36},{"ruleId":"583","severity":1,"message":"609","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":14},{"ruleId":"590","severity":1,"message":"591","line":9,"column":24,"nodeType":"592","messageId":"593","endLine":9,"endColumn":26},{"ruleId":"583","severity":1,"message":"611","line":14,"column":9,"nodeType":"585","messageId":"586","endLine":14,"endColumn":17},{"ruleId":"583","severity":1,"message":"587","line":1,"column":17,"nodeType":"585","messageId":"586","endLine":1,"endColumn":25},{"ruleId":"590","severity":1,"message":"591","line":10,"column":27,"nodeType":"592","messageId":"593","endLine":10,"endColumn":29},{"ruleId":"594","severity":1,"message":"614","line":36,"column":8,"nodeType":"596","endLine":36,"endColumn":26,"suggestions":"615"},{"ruleId":"583","severity":1,"message":"616","line":14,"column":5,"nodeType":"585","messageId":"586","endLine":14,"endColumn":20},{"ruleId":"583","severity":1,"message":"617","line":19,"column":5,"nodeType":"585","messageId":"586","endLine":19,"endColumn":24},{"ruleId":"583","severity":1,"message":"618","line":28,"column":5,"nodeType":"585","messageId":"586","endLine":28,"endColumn":24},{"ruleId":"590","severity":1,"message":"591","line":18,"column":22,"nodeType":"592","messageId":"593","endLine":18,"endColumn":26},{"ruleId":"583","severity":1,"message":"611","line":21,"column":9,"nodeType":"585","messageId":"586","endLine":21,"endColumn":17},{"ruleId":"583","severity":1,"message":"619","line":24,"column":9,"nodeType":"585","messageId":"586","endLine":24,"endColumn":11},{"ruleId":"594","severity":1,"message":"620","line":82,"column":6,"nodeType":"596","endLine":82,"endColumn":60,"suggestions":"621"},{"ruleId":"583","severity":1,"message":"587","line":1,"column":17,"nodeType":"585","messageId":"586","endLine":1,"endColumn":25},{"ruleId":"583","severity":1,"message":"609","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":14},{"ruleId":"583","severity":1,"message":"622","line":3,"column":16,"nodeType":"585","messageId":"586","endLine":3,"endColumn":27},{"ruleId":"590","severity":1,"message":"591","line":10,"column":25,"nodeType":"592","messageId":"593","endLine":10,"endColumn":28},{"ruleId":"594","severity":1,"message":"604","line":32,"column":8,"nodeType":"596","endLine":32,"endColumn":42,"suggestions":"623"},{"ruleId":"583","severity":1,"message":"622","line":4,"column":16,"nodeType":"585","messageId":"586","endLine":4,"endColumn":27},{"ruleId":"590","severity":1,"message":"591","line":11,"column":25,"nodeType":"592","messageId":"593","endLine":11,"endColumn":28},{"ruleId":"583","severity":1,"message":"619","line":14,"column":11,"nodeType":"585","messageId":"586","endLine":14,"endColumn":13},{"ruleId":"594","severity":1,"message":"624","line":45,"column":8,"nodeType":"596","endLine":45,"endColumn":37,"suggestions":"625"},{"ruleId":"583","severity":1,"message":"587","line":1,"column":17,"nodeType":"585","messageId":"586","endLine":1,"endColumn":25},{"ruleId":"583","severity":1,"message":"609","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":14},{"ruleId":"590","severity":1,"message":"591","line":16,"column":28,"nodeType":"592","messageId":"593","endLine":16,"endColumn":32},{"ruleId":"583","severity":1,"message":"626","line":21,"column":37,"nodeType":"585","messageId":"586","endLine":21,"endColumn":42},{"ruleId":"583","severity":1,"message":"627","line":21,"column":44,"nodeType":"585","messageId":"586","endLine":21,"endColumn":48},{"ruleId":"594","severity":1,"message":"604","line":54,"column":6,"nodeType":"596","endLine":61,"endColumn":4,"suggestions":"628"},{"ruleId":"583","severity":1,"message":"622","line":5,"column":16,"nodeType":"585","messageId":"586","endLine":5,"endColumn":27},{"ruleId":"590","severity":1,"message":"591","line":12,"column":28,"nodeType":"592","messageId":"593","endLine":12,"endColumn":30},{"ruleId":"583","severity":1,"message":"619","line":14,"column":9,"nodeType":"585","messageId":"586","endLine":14,"endColumn":11},{"ruleId":"594","severity":1,"message":"604","line":56,"column":6,"nodeType":"596","endLine":56,"endColumn":51,"suggestions":"629"},{"ruleId":"583","severity":1,"message":"587","line":1,"column":17,"nodeType":"585","messageId":"586","endLine":1,"endColumn":25},{"ruleId":"583","severity":1,"message":"609","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":14},{"ruleId":"583","severity":1,"message":"622","line":3,"column":16,"nodeType":"585","messageId":"586","endLine":3,"endColumn":27},{"ruleId":"583","severity":1,"message":"630","line":3,"column":41,"nodeType":"585","messageId":"586","endLine":3,"endColumn":50},{"ruleId":"590","severity":1,"message":"591","line":10,"column":26,"nodeType":"592","messageId":"593","endLine":10,"endColumn":29},{"ruleId":"594","severity":1,"message":"604","line":30,"column":8,"nodeType":"596","endLine":30,"endColumn":27,"suggestions":"631"},{"ruleId":"583","severity":1,"message":"632","line":2,"column":10,"nodeType":"585","messageId":"586","endLine":2,"endColumn":16},{"ruleId":"583","severity":1,"message":"633","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":20},{"ruleId":"583","severity":1,"message":"611","line":9,"column":11,"nodeType":"585","messageId":"586","endLine":9,"endColumn":19},{"ruleId":"579","replacedBy":"634"},{"ruleId":"581","replacedBy":"635"},{"ruleId":"579","replacedBy":"636"},{"ruleId":"581","replacedBy":"637"},{"ruleId":"583","severity":1,"message":"601","line":19,"column":3,"nodeType":"585","messageId":"586","endLine":19,"endColumn":27},{"ruleId":"583","severity":1,"message":"587","line":1,"column":17,"nodeType":"585","messageId":"586","endLine":1,"endColumn":25},{"ruleId":"583","severity":1,"message":"584","line":3,"column":34,"nodeType":"585","messageId":"586","endLine":3,"endColumn":37},{"ruleId":"583","severity":1,"message":"638","line":5,"column":8,"nodeType":"585","messageId":"586","endLine":5,"endColumn":17},{"ruleId":"590","severity":1,"message":"591","line":24,"column":24,"nodeType":"592","messageId":"593","endLine":24,"endColumn":26},{"ruleId":"594","severity":1,"message":"595","line":54,"column":6,"nodeType":"596","endLine":54,"endColumn":20,"suggestions":"639"},{"ruleId":"598","severity":1,"message":"599","line":154,"column":54,"nodeType":"600","messageId":"593","endLine":154,"endColumn":56},{"ruleId":"583","severity":1,"message":"603","line":4,"column":3,"nodeType":"585","messageId":"586","endLine":4,"endColumn":18},{"ruleId":"590","severity":1,"message":"591","line":22,"column":21,"nodeType":"592","messageId":"593","endLine":22,"endColumn":24},{"ruleId":"594","severity":1,"message":"604","line":32,"column":5,"nodeType":"596","endLine":32,"endColumn":24,"suggestions":"640"},{"ruleId":"590","severity":1,"message":"591","line":10,"column":25,"nodeType":"592","messageId":"593","endLine":10,"endColumn":27},{"ruleId":"594","severity":1,"message":"604","line":32,"column":8,"nodeType":"596","endLine":32,"endColumn":29,"suggestions":"641"},{"ruleId":"598","severity":1,"message":"608","line":37,"column":22,"nodeType":"600","messageId":"593","endLine":37,"endColumn":24},{"ruleId":"583","severity":1,"message":"609","line":2,"column":10,"nodeType":"585","messageId":"586","endLine":2,"endColumn":14},{"ruleId":"583","severity":1,"message":"610","line":8,"column":8,"nodeType":"585","messageId":"586","endLine":8,"endColumn":21},{"ruleId":"583","severity":1,"message":"611","line":24,"column":11,"nodeType":"585","messageId":"586","endLine":24,"endColumn":19},{"ruleId":"594","severity":1,"message":"604","line":61,"column":8,"nodeType":"596","endLine":61,"endColumn":41,"suggestions":"642"},{"ruleId":"598","severity":1,"message":"608","line":66,"column":22,"nodeType":"600","messageId":"593","endLine":66,"endColumn":24},{"ruleId":"583","severity":1,"message":"613","line":1,"column":27,"nodeType":"585","messageId":"586","endLine":1,"endColumn":36},{"ruleId":"583","severity":1,"message":"609","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":14},{"ruleId":"590","severity":1,"message":"591","line":9,"column":24,"nodeType":"592","messageId":"593","endLine":9,"endColumn":26},{"ruleId":"583","severity":1,"message":"611","line":14,"column":9,"nodeType":"585","messageId":"586","endLine":14,"endColumn":17},{"ruleId":"583","severity":1,"message":"587","line":1,"column":17,"nodeType":"585","messageId":"586","endLine":1,"endColumn":25},{"ruleId":"590","severity":1,"message":"591","line":10,"column":27,"nodeType":"592","messageId":"593","endLine":10,"endColumn":29},{"ruleId":"594","severity":1,"message":"614","line":36,"column":8,"nodeType":"596","endLine":36,"endColumn":26,"suggestions":"643"},{"ruleId":"583","severity":1,"message":"587","line":1,"column":17,"nodeType":"585","messageId":"586","endLine":1,"endColumn":25},{"ruleId":"583","severity":1,"message":"609","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":14},{"ruleId":"583","severity":1,"message":"622","line":3,"column":16,"nodeType":"585","messageId":"586","endLine":3,"endColumn":27},{"ruleId":"590","severity":1,"message":"591","line":10,"column":25,"nodeType":"592","messageId":"593","endLine":10,"endColumn":28},{"ruleId":"594","severity":1,"message":"604","line":32,"column":8,"nodeType":"596","endLine":32,"endColumn":42,"suggestions":"644"},{"ruleId":"583","severity":1,"message":"622","line":4,"column":16,"nodeType":"585","messageId":"586","endLine":4,"endColumn":27},{"ruleId":"590","severity":1,"message":"591","line":11,"column":25,"nodeType":"592","messageId":"593","endLine":11,"endColumn":28},{"ruleId":"583","severity":1,"message":"619","line":14,"column":11,"nodeType":"585","messageId":"586","endLine":14,"endColumn":13},{"ruleId":"594","severity":1,"message":"624","line":45,"column":8,"nodeType":"596","endLine":45,"endColumn":37,"suggestions":"645"},{"ruleId":"583","severity":1,"message":"613","line":1,"column":27,"nodeType":"585","messageId":"586","endLine":1,"endColumn":36},{"ruleId":"583","severity":1,"message":"609","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":14},{"ruleId":"590","severity":1,"message":"591","line":11,"column":25,"nodeType":"592","messageId":"593","endLine":11,"endColumn":27},{"ruleId":"583","severity":1,"message":"611","line":23,"column":9,"nodeType":"585","messageId":"586","endLine":23,"endColumn":17},{"ruleId":"583","severity":1,"message":"622","line":5,"column":16,"nodeType":"585","messageId":"586","endLine":5,"endColumn":27},{"ruleId":"590","severity":1,"message":"591","line":12,"column":28,"nodeType":"592","messageId":"593","endLine":12,"endColumn":30},{"ruleId":"583","severity":1,"message":"619","line":14,"column":9,"nodeType":"585","messageId":"586","endLine":14,"endColumn":11},{"ruleId":"594","severity":1,"message":"604","line":56,"column":6,"nodeType":"596","endLine":56,"endColumn":51,"suggestions":"646"},{"ruleId":"590","severity":1,"message":"591","line":18,"column":22,"nodeType":"592","messageId":"593","endLine":18,"endColumn":26},{"ruleId":"583","severity":1,"message":"611","line":21,"column":9,"nodeType":"585","messageId":"586","endLine":21,"endColumn":17},{"ruleId":"583","severity":1,"message":"619","line":24,"column":9,"nodeType":"585","messageId":"586","endLine":24,"endColumn":11},{"ruleId":"594","severity":1,"message":"620","line":82,"column":6,"nodeType":"596","endLine":82,"endColumn":60,"suggestions":"647"},{"ruleId":"583","severity":1,"message":"587","line":1,"column":17,"nodeType":"585","messageId":"586","endLine":1,"endColumn":25},{"ruleId":"583","severity":1,"message":"609","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":14},{"ruleId":"590","severity":1,"message":"591","line":16,"column":28,"nodeType":"592","messageId":"593","endLine":16,"endColumn":32},{"ruleId":"583","severity":1,"message":"626","line":21,"column":37,"nodeType":"585","messageId":"586","endLine":21,"endColumn":42},{"ruleId":"583","severity":1,"message":"627","line":21,"column":44,"nodeType":"585","messageId":"586","endLine":21,"endColumn":48},{"ruleId":"594","severity":1,"message":"604","line":54,"column":6,"nodeType":"596","endLine":61,"endColumn":4,"suggestions":"648"},{"ruleId":"583","severity":1,"message":"587","line":1,"column":17,"nodeType":"585","messageId":"586","endLine":1,"endColumn":25},{"ruleId":"583","severity":1,"message":"609","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":14},{"ruleId":"583","severity":1,"message":"622","line":3,"column":16,"nodeType":"585","messageId":"586","endLine":3,"endColumn":27},{"ruleId":"583","severity":1,"message":"630","line":3,"column":41,"nodeType":"585","messageId":"586","endLine":3,"endColumn":50},{"ruleId":"590","severity":1,"message":"591","line":10,"column":26,"nodeType":"592","messageId":"593","endLine":10,"endColumn":29},{"ruleId":"594","severity":1,"message":"604","line":30,"column":8,"nodeType":"596","endLine":30,"endColumn":27,"suggestions":"649"},{"ruleId":"650","severity":1,"message":"651","line":11,"column":9,"nodeType":"652","endLine":11,"endColumn":61},{"ruleId":"583","severity":1,"message":"632","line":2,"column":10,"nodeType":"585","messageId":"586","endLine":2,"endColumn":16},{"ruleId":"583","severity":1,"message":"633","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":20},{"ruleId":"583","severity":1,"message":"611","line":9,"column":11,"nodeType":"585","messageId":"586","endLine":9,"endColumn":19},{"ruleId":"583","severity":1,"message":"616","line":14,"column":5,"nodeType":"585","messageId":"586","endLine":14,"endColumn":20},{"ruleId":"583","severity":1,"message":"617","line":19,"column":5,"nodeType":"585","messageId":"586","endLine":19,"endColumn":24},{"ruleId":"583","severity":1,"message":"618","line":28,"column":5,"nodeType":"585","messageId":"586","endLine":28,"endColumn":24},{"ruleId":"583","severity":1,"message":"602","line":117,"column":17,"nodeType":"585","messageId":"586","endLine":117,"endColumn":21},{"ruleId":"583","severity":1,"message":"606","line":21,"column":5,"nodeType":"585","messageId":"586","endLine":21,"endColumn":30},"no-native-reassign",["653"],"no-negated-in-lhs",["654"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["653"],["654"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.id' and 'successProductReview'. Either include them or remove the dependency array.","ArrayExpression",["655"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'userUpdateProfileReducer' is defined but never used.","'data' is assigned a value but never used.","'useSearchParams' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["656"],"'USER_UPDATE_PROFILE_RESET' is defined but never used.",["657"],"Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'FormContainer' is defined but never used.","'location' is assigned a value but never used.",["658"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["659"],"'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["660"],"'useLocation' is defined but never used.",["661"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["662"],"'pages' is assigned a value but never used.","'page' is assigned a value but never used.",["663"],["664"],"'useParams' is defined but never used.",["665"],"'Button' is defined but never used.","'useHistory' is defined but never used.",["653"],["654"],["653"],["654"],"'SearchBox' is defined but never used.",["666"],["667"],["668"],["669"],["670"],["671"],["672"],["673"],["674"],["675"],["676"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"679","fix":"681"},{"desc":"682","fix":"683"},{"desc":"684","fix":"685"},{"desc":"686","fix":"687"},{"desc":"688","fix":"689"},{"desc":"690","fix":"691"},{"desc":"692","fix":"693"},{"desc":"694","fix":"695"},{"desc":"696","fix":"697"},{"desc":"677","fix":"698"},{"desc":"679","fix":"699"},{"desc":"679","fix":"700"},{"desc":"682","fix":"701"},{"desc":"684","fix":"702"},{"desc":"688","fix":"703"},{"desc":"690","fix":"704"},{"desc":"694","fix":"705"},{"desc":"686","fix":"706"},{"desc":"692","fix":"707"},{"desc":"696","fix":"708"},"Update the dependencies array to be: [dispatch, id, match.id, successProductReview]",{"range":"709","text":"710"},"Update the dependencies array to be: [userInfo, redirect, history]",{"range":"711","text":"712"},{"range":"713","text":"712"},"Update the dependencies array to be: [userInfo, dispatch, user, success, history]",{"range":"714","text":"715"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"716","text":"717"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"718","text":"719"},"Update the dependencies array to be: [dispatch, history, successDelete, userInfo]",{"range":"720","text":"721"},"Update the dependencies array to be: [user, userId, successUpdate, dispatch, history]",{"range":"722","text":"723"},"Update the dependencies array to be: [dispatch, userInfo, successDelete, successCreate, createdProduct, keyword, history]",{"range":"724","text":"725"},"Update the dependencies array to be: [product, productId, dispatch, successUpdate, history]",{"range":"726","text":"727"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"728","text":"729"},{"range":"730","text":"710"},{"range":"731","text":"712"},{"range":"732","text":"712"},{"range":"733","text":"715"},{"range":"734","text":"717"},{"range":"735","text":"721"},{"range":"736","text":"723"},{"range":"737","text":"727"},{"range":"738","text":"719"},{"range":"739","text":"725"},{"range":"740","text":"729"},[1549,1563],"[dispatch, id, match.id, successProductReview]",[922,941],"[userInfo, redirect, history]",[1125,1146],[2002,2035],"[userInfo, dispatch, user, success, history]",[1330,1348],"[success, history, order._id, dispatch]",[2450,2504],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1041,1075],"[dispatch, history, successDelete, userInfo]",[1582,1611],"[user, userId, successUpdate, dispatch, history]",[1661,1772],"[dispatch, userInfo, successDelete, successCreate, createdProduct, keyword, history]",[2032,2077],"[product, productId, dispatch, successUpdate, history]",[933,952],"[dispatch, history, userInfo]",[1549,1563],[922,941],[1125,1146],[2002,2035],[1330,1348],[1041,1075],[1582,1611],[2032,2077],[2450,2504],[1661,1772],[933,952]]