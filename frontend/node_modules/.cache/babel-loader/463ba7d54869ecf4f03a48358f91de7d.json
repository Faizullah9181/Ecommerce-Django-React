{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Ecommerce\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreen() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useNavigate();\n  const UserDetails = useSelector(state => state.UserDetails);\n  const {\n    error,\n    loading,\n    user\n  } = UserDetails;\n  const UserLogin = useSelector(state => state.UserLogin);\n  const {\n    userInfo\n  } = UserLogin;\n  useEffect(() => {\n    if (!userInfo) {\n      history('/login');\n    } else {\n      if (!user || !user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileScreen, \"DoIQTdrmhOZzxYRSzVieNAfg6kU=\", false, function () {\n  return [useDispatch, useLocation, useNavigate, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Ecommerce/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Link","useLocation","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","Loader","Message","FormContainer","getUserDetails","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","location","history","UserDetails","state","error","loading","user","UserLogin","userInfo","redirect","submitHandler","e","preventDefault","register"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link ,useLocation,useNavigate} from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails } from '../actions/userActions' \r\n\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n    const history =  useNavigate();\r\n\r\n\r\n    const UserDetails = useSelector(state => state.UserDetails)\r\n    const { error, loading, user} = UserDetails\r\n\r\n\r\n    const UserLogin = useSelector(state => state.UserLogin)\r\n    const { userInfo} = UserLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history('/login')\r\n        } else {\r\n            if (!user || !user.name ) {\r\n               \r\n                dispatch(getUserDetails('profile'))\r\n                \r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n\r\n\r\n    }, [ userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n  return (\r\n    <Row>\r\n\r\n    <Col md={3}>\r\n    \r\n    <h2>User Profile</h2>\r\n    \r\n    </Col>\r\n\r\n<Col md={9}>\r\n\r\n\r\n<h2>My Orders</h2>\r\n\r\n</Col>\r\n\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen"]},"metadata":{},"sourceType":"module"}