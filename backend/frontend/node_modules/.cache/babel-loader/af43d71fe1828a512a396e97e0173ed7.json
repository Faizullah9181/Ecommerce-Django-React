{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userDetailsReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,QAGO,4BAHP;AAKA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EAA0BC,mBAA1B,EAA8CC,kBAA9C,EAAiEC,wBAAjE,QAAiG,yBAAjG;AACA,SAASC,kBAAT,EAA4BC,mBAA5B,EAAiDC,eAAjD,EAAiEC,kBAAjE,EAAoFC,gBAApF,EAAqGC,mBAArG,QAAgI,yBAAhI;AACA,MAAMC,OAAO,GAAGjB,eAAe,CAAC;AAC9BkB,EAAAA,WAAW,EAAEd,kBADiB;AAE9Be,EAAAA,cAAc,EAAEd,qBAFc;AAG9Be,EAAAA,IAAI,EAAEd,WAHwB;AAI9Be,EAAAA,SAAS,EAAEd,gBAJmB;AAK9Be,EAAAA,YAAY,EAACd,mBALiB;AAM9Be,EAAAA,WAAW,EAACd,kBANkB;AAO9Be,EAAAA,iBAAiB,EAACf,kBAPY;AAQ9BgB,EAAAA,WAAW,EAACd,kBARkB;AAS9Be,EAAAA,YAAY,EAACd,mBATiB;AAU9Be,EAAAA,QAAQ,EAACd,eAVqB;AAW9Be,EAAAA,WAAW,EAACd;AAXkB,CAAD,CAA/B;AAcA,MAAMe,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIE,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GAEjC,EAFF;AAIF,MAAMK,YAAY,GAAG;AACnBhB,EAAAA,IAAI,EAAE;AAAEiB,IAAAA,SAAS,EAAER,oBAAb;AAAkCS,IAAAA,eAAe,EAACH;AAAlD,GADa;AAEnBd,EAAAA,SAAS,EAAE;AAAEkB,IAAAA,QAAQ,EAAEL;AAAZ;AAFQ,CAArB;AAOA,MAAMM,UAAU,GAAG,CAACtC,KAAD,CAAnB;AAEA,MAAMuC,KAAK,GAAG1C,WAAW,CACvBkB,OADuB,EAEvBmB,YAFuB,EAGvBjC,mBAAmB,CAACF,eAAe,CAAC,GAAGuC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from \"./reducers/productReducers\";\r\n\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport { userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer } from \"./reducers/userReducers\";\r\nimport { orderCreateReducer,orderDetailsReducer ,orderPayReducer,orderListMyReducer,orderListReducer,orderDeliverReducer} from  './reducers/orderReducer'\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister:userRegisterReducer,\r\n  userDetails:userDetailsReducer,\r\n  userUpdateProfile:userDetailsReducer,\r\n  orderCreate:orderCreateReducer,\r\n  orderDetails:orderDetailsReducer,\r\n  orderPay:orderPayReducer,\r\n  orderListMy:orderListMyReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\n  const shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};  \r\n\r\nconst initialState = {\r\n  cart: { cartItems: cartItemsFromStorage,shippingAddress:shippingAddressFromStorage },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n\r\n\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}